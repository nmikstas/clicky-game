{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","components/TitleBar/index.js","components/GPKCard/index.js","components/StatusBar/index.js","App.js","index.js"],"names":["NMHeader","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NMFooter","TitleBar","GPKCard","props","onClick","clickCard","alt","name","src","image","StatusBar","newClass","clickResult","resetGame","message","score","hiScore","App","state","deck","clickedIds","gameMessage","componentDidMount","shuffleDeck","rndArray","length","gpk","rnd","Math","floor","random","includes","push","setState","i","render","key","map","card","Component","Header","Footer","document","getElementById"],"mappings":"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","file":"static/js/main.41e184f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst NMHeader = () =>\r\n{\r\n    return (\r\n        <header className=\"header-class\">\r\n            <nav className=\"navbar navbar-dark navbar-expand-lg\">\r\n                <a className=\"navbar-brand nav-title px-2\" href=\"https://nmikstas.github.io/portfolio/index.html\">Nick Mikstas Portfolio</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                    aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"container text-center\">\r\n                    <h1>React Clicky Game</h1>\r\n                </div>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://nmikstas.github.io/portfolio/index.html\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://nmikstas.github.io/portfolio/resume.html\">Resume</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://nmikstas.github.io/portfolio/web.html\">Web</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://nmikstas.github.io/portfolio/embedded.html\">Embedded</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://nmikstas.github.io/portfolio/fpga.html\">FPGA</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://nmikstas.github.io/portfolio/dsp.html\">DSP</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://nmikstas.github.io/portfolio/games.html\">Games</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default NMHeader;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst NMFooter = () =>\r\n{\r\n    return (\r\n        <footer id=\"sticky-footer\" className=\"pt-4 pb-1 mt-4\">\r\n            <div className=\"container text-center\">\r\n                <small>&copy;Nick Mikstas - nmikstas@alumni.scu.edu</small>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default NMFooter;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst TitleBar = () =>\r\n{\r\n    return (\r\n        <div className=\"title container-fluid\">\r\n            <p>\r\n                Click the Images Only Once to Earn Points! \r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TitleBar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst GPKCard = (props) =>\r\n{\r\n    return (\r\n        <div className=\"card\" onClick={ () => props.clickCard(props.id) }>\r\n            <div className=\"img-container\">\r\n                <img alt={props.name} src={props.image} />\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GPKCard;\r\n\r\n\r\n\r\n   \r\n ","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst StatusBar = (props) =>\r\n{\r\n    let newClass;\r\n\r\n    //Set the color of the status message.\r\n    if(props.clickResult === \"good\")\r\n    {\r\n        newClass = \"col-md-5 message good-guess\";\r\n    }\r\n    else if(props.clickResult === \"bad\")\r\n    {\r\n        newClass = \"col-md-5 message bad-guess\";\r\n    }\r\n    else\r\n    {\r\n        newClass = \"col-md-5 message reset-guess\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"status-bar row\">\r\n            <div className=\"col-md-2 button\">\r\n                <button className=\"btn btn-outline-danger\" onClick={ () => props.resetGame() }>Reset Game</button>\r\n            </div>\r\n\r\n            <div className={newClass}>\r\n                {props.message}\r\n            </div>\r\n            \r\n            <div className=\"col-md-5 score\">\r\n                Your Score: {props.score} | High Score: {props.hiScore}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatusBar;","import React, { Component } from \"react\";\nimport TitleBar from \"./components/TitleBar\";\nimport GPKCard from \"./components/GPKCard\";\nimport gpk from \"./cards.json\";\nimport \"./App.css\";\nimport StatusBar from \"./components/StatusBar\";\n\nclass App extends Component\n{\n    state =\n    {\n        deck: [],\n        clickedIds: [],\n        score: 0,\n        hiScore: 0,\n        gameMessage: \"Click an Image to Begin!\",\n        clickResult: \"reset\"\n    };\n\n    //Runs after component is loaded.\n    componentDidMount = () =>\n    {\n        this.shuffleDeck();\n    }\n    \n    //Randomly shuffle the cards.\n    shuffleDeck = () =>\n    {\n        let rndArray = [];\n        let deck = [];\n\n        while(rndArray.length < gpk.length)\n        {\n            let rnd = Math.floor(Math.random() * gpk.length);\n\n            if(!rndArray.includes(rnd))\n            {\n                rndArray.push(rnd);\n                deck.push(gpk[rnd]);\n            }\n        }\n\n        this.setState({ deck: deck });\n    }\n\n    resetGame = () =>\n    {\n        this.shuffleDeck();\n\n        this.setState(\n        {\n            clickedIds: [],\n            score: 0,\n            hiScore: 0,\n            gameMessage: \"Click an Image to Begin!\",\n            clickResult: \"reset\"\n        });\n    }\n\n    //Check card click and randomize cards.\n    clickCard = (id) =>\n    {\n        let score = this.state.score + 1;\n        let hiScore = this.state.hiScore;\n        let clickedIds = [];\n\n        //Copy clickedId array to new array.\n        for(let i = 0; i < this.state.clickedIds.length; i++)\n        {\n            clickedIds.push(this.state.clickedIds[i]);\n        }\n\n        if(hiScore < score)\n        {\n            hiScore = score;\n        }\n\n        if(clickedIds.includes(id))\n        {\n            this.setState(\n            { \n                clickedIds: [],\n                score: 0,\n                gameMessage: \"Already Clicked!\",\n                clickResult: \"bad\"\n            });\n        }\n        else\n        {\n            clickedIds.push(id);\n\n            this.setState(\n            { \n                clickedIds: clickedIds,\n                score: score,\n                hiScore: hiScore,\n                gameMessage: \"Good Guess!\",\n                clickResult: \"good\"\n            });\n        }\n\n        this.shuffleDeck();\n    }\n\n    render = () =>\n    {\n        return (\n            <div id=\"page-body\">\n                <TitleBar />\n                <div className=\"container\">\n                    <StatusBar\n                        key={100}\n                        clickResult={this.state.clickResult}\n                        resetGame={this.resetGame}\n                        message={this.state.gameMessage}\n                        score={this.state.score}\n                        hiScore={this.state.hiScore}\n                    />\n                    \n                    {this.state.deck.map(card =>\n                    (\n                        <GPKCard\n                            clickCard={this.clickCard}\n                            id={card.id}\n                            key={card.id}\n                            name={card.name}\n                            image={card.image}\n                        />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport App from \"./App\";\n\nrender([<Header key=\"1\" />, <App key=\"2\" />, <Footer key=\"3\" />], document.getElementById(\"root\"));\n"],"sourceRoot":""}